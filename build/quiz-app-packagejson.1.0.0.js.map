{"version":3,"sources":["webpack:///webpack/bootstrap 60227039da86add7ae27","webpack:///./js/index.js"],"names":[],"mappings":";AAAA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA,uBAAe;AACf;AACA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;;;AAGA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;;;;;;;ACtCA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,MAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,MAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,MAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA,kBAAiB,2BAA2B;AAC5C;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA,EAAC;;AAED;AACA;AACA;AACA;AACA,EAAC;;AAED;AACA;AACA;AACA,EAAC","file":"quiz-app-packagejson.1.0.0.js","sourcesContent":[" \t// The module cache\n \tvar installedModules = {};\n\n \t// The require function\n \tfunction __webpack_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId])\n \t\t\treturn installedModules[moduleId].exports;\n\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\texports: {},\n \t\t\tid: moduleId,\n \t\t\tloaded: false\n \t\t};\n\n \t\t// Execute the module function\n \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n \t\t// Flag the module as loaded\n \t\tmodule.loaded = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n\n \t// expose the modules object (__webpack_modules__)\n \t__webpack_require__.m = modules;\n\n \t// expose the module cache\n \t__webpack_require__.c = installedModules;\n\n \t// __webpack_public_path__\n \t__webpack_require__.p = \"\";\n\n \t// Load entry module and return exports\n \treturn __webpack_require__(0);\n\n\n\n/** WEBPACK FOOTER **\n ** webpack/bootstrap 60227039da86add7ae27\n **/","var QUESTIONS = [\n    {\n        text: 'What sound does a cow make?',\n        answers: [\n            'Moo',\n            'Woof',\n            'Quack',\n            'Cheep'\n        ],\n        correct: 0\n    },\n    {\n        text: 'What sound does a chicken make?',\n        answers: [\n            'Meow',\n            'Cluck',\n            'Baa',\n            'Bleat'\n        ],\n        correct: 1\n    },\n    {\n        text: 'What sound does a pig make?',\n        answers: [\n            'Woof',\n            'Howl',\n            'Oink',\n            'Moo'\n        ],\n        correct: 2\n    },\n    {\n        text: 'What sound does a duck make?',\n        answers: [\n            'Oink',\n            'Meow',\n            'Honk',\n            'Quack'\n        ],\n        correct: 3\n    }\n];\n\nvar questionsPageElement = $('.questions-page');\nvar questionCurrentElement = $('.question-current');\nvar questionsTotalElement = $('.questions-total');\nvar questionElement = $('.question');\nvar answersElement = $('.answers');\n\nvar resultsPageElement = $('.results-page');\nvar scoreElement = $('.score');\nvar restartButtonElement = $('.restart-button');\n\nvar showResults = function() {\n    questionsPageElement.hide();\n    resultsPageElement.show();\n};\n\nvar showQuestions = function() {\n    resultsPageElement.hide();\n    questionsPageElement.show();\n};\n\nvar resetScore = function() {\n    scoreElement.text(0);\n};\n\nvar increaseScore = function() {\n    var score = parseInt(scoreElement.text(), 10);\n    scoreElement.text(score + 1);\n};\n\nvar setQuestion = function(questionIndex) {\n    var question = QUESTIONS[questionIndex];\n    questionCurrentElement.text(questionIndex);\n    questionElement.text(question.text);\n    answersElement.empty();\n    for (var i=0; i<question.answers.length; i++) {\n        var answer = question.answers[i];\n        answersElement.append('<li><button type=\"button\">' + answer + '</button></li>');\n    }\n};\n\nanswersElement.on('click', 'button', function() {\n    var choice = $(this).parent().index();\n    var questionIndex = parseInt(questionCurrentElement.text(), 10);\n    var question = QUESTIONS[questionIndex];\n    if (question.correct === choice) {\n        increaseScore();\n    }\n\n    if (questionIndex + 1 < QUESTIONS.length) {\n        setQuestion(questionIndex + 1);\n    }\n    else {\n        showResults();\n    }\n});\n\nrestartButtonElement.click(function() {\n    setQuestion(0);\n    resetScore();\n    showQuestions();\n});\n\n$(document).ready(function() {\n    questionsTotalElement.text(QUESTIONS.length);\n    setQuestion(0);\n});\n\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./js/index.js\n ** module id = 0\n ** module chunks = 0\n **/"],"sourceRoot":""}